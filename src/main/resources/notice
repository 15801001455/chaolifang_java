1.第一步改造,加入框架https://mp.baomidou.com/guide/quick-start.html 简化了mybatis的开发
  只需要三步就可以使用
  1.pom.xml
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.1.RELEASE</version>
        <relativePath/>
    </parent>
    <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-boot-starter</artifactId>
        <version>3.3.2</version>
    </dependency>
   2.启动类
      @MapperScan("com.baomidou.mybatisplus.samples.quickstart.mapper")
   3.public interface UserMapper extends BaseMapper<User> {

     }
   4.注意 实体里面也要加入注解
   @TableName("bookmanager")
   @TableField("borrowTime")
   private Date borrowTime;  具体跟数据库中字段一样也要加注解不知道为什么 可能是没有按照建立表的规范(下划线分割)建立表字段
   5.还有注意的东西 就是用了苞米豆以后pom中貌似不用引入以下
     <dependency>
        <groupId>org.mybatis.spring.boot</groupId>
        <artifactId>mybatis-spring-boot-starter</artifactId>
        <version>2.1.3</version>
    </dependency>
2.第二步改造 application.yml中的数据库连接串用户名密码加密处理 增加了AESUtil处理类
   1)AESUtil处理类中加入了Base64处理,就是为了解决 https://blog.csdn.net/kzcming/article/details/80019478
     看这个类的main方法就可以
   2)加入pom.xml
        <dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.11</version>
		</dependency>
   3）idea中edit configurations 加入 --mpw.key xiaojin000000016  注意:在idea中都是空格分隔key和value不是=号！打成jar包以后参数应该是--mpw.key=xiaojin000000016，是=号连接的
   4) application.yml文件中 注意mpw开头
      url: mpw:jRVl8aqpJGl/9STK58AY8PmKwyjVoM6xYHagXukWopsw94qhzFfAsoCLGVffhv0d85v+Cz584qnvgK0jpKfYwPM+iGfb0fa+RJRCkPsX9hc=
      username: mpw:wtFnsAXFmgsJM7uObQtLjw==
      password: mpw:wtFnsAXFmgsJM7uObQtLjw==
   5) 其实我没感觉这样安全多少 开发者还是会看到xiaojin000000016这个原始密钥
   注意：这种方式没有任何意义，因为开发者会看到原始密钥，已经找到了一种非常好的方式进行加盐处理，只有你自己知道连接数据库的用户名和密码！！！！！！！
         操作步骤如下：
         1）pom中加入
             <dependency>
                <groupId>com.github.ulisesbocchio</groupId>
                <artifactId>jasypt-spring-boot-starter</artifactId>
                <version>2.1.0</version>
            </dependency>
         2）去maven的仓库目录: G:\software\apache-maven-3.6.1\repo\org\jasypt\jasypt\1.9.2 执行一下命令
             java -cp jasypt-1.9.2.jar org.jasypt.intf.cli.JasyptPBEStringEncryptionCLI input="root" password=PWDSalt algorithm=PBEWithMD5AndDES
             注意input="root",root就是原始密码 password=PWDSalt就是盐值,执行后OUTPUT就是最终的密码,这个密码每次执行都会变,但是我们随便知道一个就行
             ----ENVIRONMENT-----------------
             Runtime: Oracle Corporation Java HotSpot(TM) 64-Bit Server VM 25.211-b12
             ----ARGUMENTS-------------------
             algorithm: PBEWithMD5AndDES
             input: root
             password: PWDSalt
             ----OUTPUT----------------------
             sH49bUekqrZ28g6ArMyvVQ==
        3）application.yml中加入如下配置
                   spring:
                     datasource:
                       url: jdbc:mysql://127.0.0.1:3306/chaolifang?characterEncoding=utf8&useSSL=false
                       username: ENC(sH49bUekqrZ28g6ArMyvVQ==)
                       password: ENC(sH49bUekqrZ28g6ArMyvVQ==)
                       driver-class-name: com.mysql.jdbc.Driver
                   jasypt:
                     encryptor:
                       password: PWDSalt
3.把项目整体改造成多数据源并且使用druid数据源
    1.      <!-- 数据源 -->
      		<dependency>
      			<groupId>com.alibaba</groupId>
      			<artifactId>druid-spring-boot-starter</artifactId>
      			<version>1.1.22</version>
      		</dependency>
      		<!-- 暴力豆动态数据源 -->
      		<dependency>
      			<groupId>com.baomidou</groupId>
      			<artifactId>dynamic-datasource-spring-boot-starter</artifactId>
      			<version>3.1.1</version>
      		</dependency>
    2.启动类
       @SpringBootApplication(exclude = DruidDataSourceAutoConfigure.class)
    3.yml文件
      spring:
        autoconfigure:
          exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure
        datasource:
          druid:
            stat-view-servlet:
              enabled: true
              loginUsername: admin
              loginPassword: 123456
          dynamic:
            primary: master #设置默认的数据源或者数据源组,默认值即为master
            strict: false #设置严格模式,默认false不启动. 启动后在未匹配到指定数据源时候回抛出异常,不启动会使用默认数据源.
            druid: #以下是全局默认值，可以全局更改
              initial-size: 50
              max-active: 50
              min-idle: 5
              max-wait: 2000
            datasource: #以下是多数据源配置
              master:
                url: jdbc:mysql://127.0.0.1:3306/chaolifang?characterEncoding=utf8&useSSL=false
                username: ENC(sH49bUekqrZ28g6ArMyvVQ==)
                password: ENC(sH49bUekqrZ28g6ArMyvVQ==)
                driver-class-name: com.mysql.jdbc.Driver
              master_bak: # 纯粹为了演示多个数据源测试用
                        url: jdbc:mysql://127.0.0.1:3306/chaolifang_backup?characterEncoding=utf8&useSSL=false
                        username: ENC(sH49bUekqrZ28g6ArMyvVQ==)
                        password: ENC(sH49bUekqrZ28g6ArMyvVQ==)
                        driver-class-name: com.mysql.jdbc.Driver
     4.调参数参考文档：https://github.com/baomidou/dynamic-datasource-spring-boot-starter/wiki/Integration-With-Druid
     5.具体使用：@DS 可以注解在方法上和类上，同时存在方法注解优先于类上注解。强烈建议只注解在service实现上
-----------------------------------------------------------------------------------------
300.格式化代码
Ctrl+Alt+L: 格式化代码
Ctrl+Alt+O: 删除无用import